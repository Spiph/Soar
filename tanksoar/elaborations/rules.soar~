sp {apply*operator*create-action-command
   (state <s> ^operator <o>
              ^io.output-link <out>)
   (<o> ^actions <act>)
   (<act> ^<att> <value>)
   (<value> ^<att2> <value2>)
-->
   (<out> ^<att> <value3>)
   (<value3> ^<att2> <value2>)}

sp {apply*operator*remove-command
   (state <s> ^operator.actions
              ^io.output-link <out>)
   (<out> ^<att> <value>)
   (<value> ^status complete)
-->
   (<out> ^<att> <value> -)}

sp {elaborate*state*io
   (state <s> ^superstate.io <io>)
-->
   (<s> ^io <io>)}

sp {elaborate*state*name
   (state <s> ^superstate.operator.name <name>) -->
   (<s> ^name <name>)}

##Propose Chase Operator
# If the task is tanksoar, and sound sensor is not silent, and there
# is no tank on radar, and energy or missiles is not low, then propose the
# chase operator.
sp {elaborate*state*missiles*low
   (state <s> ^name tanksoar
              ^io.input-link.missiles 0)
-->
   (<s> ^missiles-energy low)}
sp {elaborate*state*energy*low
   (state <s> ^name tanksoar
              ^io.input-link.energy <= 200)
-->
   (<s> ^missiles-energy low)}

sp {chase*elaborate*state*sound-direction
   (state <s> ^name chase
              ^io.input-link.sound <sound>)
-->
   (<s> ^sound-direction <sound>)}

sp {chase*elaborate*radar
   (state <s> ^name chase
              ^operator.actions <a>
              ^io.input-link.radar-status off)
-->
   (<a> ^radar.switch on
        ^radar-power.setting 13)}

## Retreat Operator Elaboration
## If there is a retreat state and there is a sound coming in a given direction, record that direction.
## If there is a retreat state and there is radar contact with a tank, record forward direction.
## If there is a retreat state and there is an incoming, record the direction.
## If there is a retreat state and there is radar contact with a tank that is not in the center, record ##
## that direction as a direction to avoid moving.
sp {elaborate*retreat*sound*direction
   (state <s> ^name retreat
              ^io.input-link.sound { <> silent <direction> })
-->
   (<s> ^direction <direction>)}
sp {elaborate*retreat*radar*front
   (state <s> ^name retreat
              ^io.input-link.radar.tank)
-->
   (<s> ^direction forward)}
sp {elaborate*retreat*incoming*direction
   (state <s> ^name retreat
              ^io.input-link.incoming.<dir> yes)
-->
   (<s> ^direction <dir>)}
sp {elaborate*retreat*radar*direction
   (state <s> ^name retreat
              ^io.input-link.radar.tank.position { <dir> <> center })
-->
   (<s> ^avoid-direction <dir>)}

## Propose Move Sidestep Operator
## If the state is named retreat then propose sidestep from the direction of a detected enemy, as
##long as that direction is not blocked, is not the direction of another enemy or is a direction to avoid. ##
## Propose Wait
## If the state is named retreat then propose wait, and make a worst preference for it.
sp {elaborate*sidestep-directions
   (state <s> ^name tanksoar)
-->
   (<s> ^side-direction <sd>)
   (<sd> ^forward right left ^backward right left
         ^right forward backward ^left forward backward)}

sp {elaborate*shields-on
   (state <s> ^operator.actions <a>
              ^io.input-link <il>)
   (<il> ^incoming.<dir> yes
         ^shield-status off)
-->
   (<a> ^shields.switch on)}
sp {elaborate*shields-off
   (state <s> ^operator.actions <a>
              ^io.input-link <il>)
   (<il> -^incoming.<dir> yes
          ^shield-status on)
-->
   (<a> ^shields.switch off)}